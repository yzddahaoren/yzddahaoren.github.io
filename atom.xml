<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://g.yzddhr.me</id>
    <title>yzd-gridea</title>
    <updated>2019-08-14T11:44:36.664Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://g.yzddhr.me"/>
    <link rel="self" href="https://g.yzddhr.me/atom.xml"/>
    <subtitle>记录 :  思考 : 慎言</subtitle>
    <logo>https://g.yzddhr.me/images/avatar.png</logo>
    <icon>https://g.yzddhr.me/favicon.ico</icon>
    <rights>All rights reserved 2019, yzd-gridea</rights>
    <entry>
        <title type="html"><![CDATA[免费一年的focusky的激活码]]></title>
        <id>https://g.yzddhr.me/post/mian-fei-yi-nian-de-focusky-de-ji-huo-ma</id>
        <link href="https://g.yzddhr.me/post/mian-fei-yi-nian-de-focusky-de-ji-huo-ma">
        </link>
        <updated>2019-08-14T10:50:51.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>关于focusky的介绍就不要了吧,非常好用的PPT软件,素材很多</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>关于focusky的介绍就不要了吧,非常好用的PPT软件,素材很多</p>
</blockquote>
<!-- more -->
<p>下面介绍特别版注册:<strong>截至有效期2019年9月15日</strong>.<br>
介绍:<br>
https://www.iplaysoft.com/focusky-zhu-ce-ma.html<br>
超级激活码：E02C-92AD-595E-99EC-735C<br>
激活码有效期：即日起至2019年09月15日<br>
激活后特别版有效期：365天特别版的升级<br>
1、电脑打开 <a href="http://www.focusky.com.cn/account/register?iCode=pugwh">http://www.focusky.com.cn/account/register?iCode=pugwh</a> ，注册后，登录你的账号，进入“账号升级”后台激活升级。<br>
2、升级后，打开Focusky软件，登录已升级的账号，就能获得特别版的使用权限。这里需要注意，若升级前正使用账号登录Focusky，升级后，软件上依然显示免费版，那么请先退出账号，重新登录即可。</p>
<p>邮箱可以使用临时邮箱<br>
<a href="aws.yzddhr.me:3000">aws.yzddhr.me:3000</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[太喜欢这个欢乐沙雕漂亮的小改改了！]]></title>
        <id>https://g.yzddhr.me/post/tai-xi-huan-zhe-ge-huan-le-sha-diao-piao-liang-de-xiao-gai-gai-liao</id>
        <link href="https://g.yzddhr.me/post/tai-xi-huan-zhe-ge-huan-le-sha-diao-piao-liang-de-xiao-gai-gai-liao">
        </link>
        <updated>2019-08-14T10:49:09.000Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://www.instagram.com/celinefarach">https://instagram.com/celinefarach</a></p>
]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.instagram.com/celinefarach">https://instagram.com/celinefarach</a></p>
<!-- more -->
<p>特别是这个视频：<br>
<a href="https://img.hacpai.com/file/2019/08/690089543912468451260041678916118869249833n-c5e28855.mp4">690089543912468451260041678916118869249833n.mp4</a><br>
还能说什么呢？<br>
生活或许很美好？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[axel-corn下载服务器]]></title>
        <id>https://g.yzddhr.me/post/axel-corn-xia-zai-fu-wu-qi</id>
        <link href="https://g.yzddhr.me/post/axel-corn-xia-zai-fu-wu-qi">
        </link>
        <updated>2019-08-14T10:48:05.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>axel-corn 无意间发现的下载器,基于的是axel的下载工具,这个都知道多线程下载器嘛,好用就完事了,这个项目主要是方便自己的网页短操作.就是这样.</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>axel-corn 无意间发现的下载器,基于的是axel的下载工具,这个都知道多线程下载器嘛,好用就完事了,这个项目主要是方便自己的网页短操作.就是这样.</p>
</blockquote>
<!-- more -->
<h2 id="环境">环境</h2>
<ul>
<li>python</li>
</ul>
<p>// python的作用主要是就是开一个web ,静态的 ,当然,你说我用caddy不行啊?那当然可以,比起来还是自带的python更方便而已.</p>
<h2 id="下载安装">下载安装</h2>
<pre><code>下载和编译:
$ git clone https://github.com/lihaoyun6/axeldown-core.git
$ cd axeldown-core
$ chmod a+x build.sh
$ ./build.sh

</code></pre>
<h2 id="环境准备">环境准备:</h2>
<p>因为项目基于web.py模块提供服务, 故需要先安装web.py</p>
<pre><code>$ sudo easy_install web.py
</code></pre>
<p>启动运行:</p>
<pre><code>$ cd axeldown-core
$ python axeldown.py [自定义端口]
</code></pre>
<p>例如</p>
<pre><code>$ python axeldown.py 2333
</code></pre>
<p>(不使用自定义端口时, 默认在8080端口开启服务)</p>
<p>启动服务后在浏览器中打开&quot;<a href="http://127.0.0.1:%E7%AB%AF%E5%8F%A3/">http://127.0.0.1:端口</a>&quot;即可看到管理界面<br>
<img src="https://img.hacpai.com/file/2019/08/run-ead3f1f5.jpg" alt="run.jpg"></p>
<h2 id="结合百度云">结合百度云</h2>
<p><strong>1. 先解析</strong><br>
进入下面的连接,解析下百度云的分享文件.<br>
<a href="https://labs.nazo.moe/netdisk.html">https://labs.nazo.moe/netdisk.html</a><br>
得到图片这样的一串东西,这个是给<code>ari2c</code>用的,但是下载链接看得出来是哪个吧,把下载链接单独拿出来,就可以了.<br>
<img src="https://img.hacpai.com/file/2019/08/20-b9449b6e.png" alt="20.png"></p>
<h2 id="其他">其他</h2>
<p>顺便说一句,搭配<code>ALOOK</code>,这个搜一下,是<code>IOS</code>的一个浏览器,可以直接解析出某<code>ProXXub</code>的视频的<code>CDN</code>下载链接,这个链接用国内的<code>vps</code>也能下载,速度超快,当然你用IDM也行,但是因为是手机端的操作,这个<code>axel-corn</code>肯定是好用多了.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[色图pixiv下载器]]></title>
        <id>https://g.yzddhr.me/post/se-tu-pixiv-xia-zai-qi</id>
        <link href="https://g.yzddhr.me/post/se-tu-pixiv-xia-zai-qi">
        </link>
        <updated>2019-08-14T10:46:47.000Z</updated>
        <summary type="html"><![CDATA[<p>pixiv,知名色图网站,另一解释的P小将.主要就是没事下载个色图康康,毕竟搞黄色是人类去世的阶梯,当然是高尔基说的,不关我事,</p>
]]></summary>
        <content type="html"><![CDATA[<p>pixiv,知名色图网站,另一解释的P小将.主要就是没事下载个色图康康,毕竟搞黄色是人类去世的阶梯,当然是高尔基说的,不关我事,</p>
<!-- more -->
<p>但是倒的确是是这样,谁不想快点去世呢?大部人还是活着受罪的啊,毕竟.</p>
<blockquote>
<p>pixiv : 色图站,没啥好说的.</p>
</blockquote>
<h2 id="环境">环境</h2>
<ul>
<li>python</li>
<li>node</li>
</ul>
<h2 id="安装">安装</h2>
<h3 id="脚本">脚本</h3>
<p><strong>1. 使用一键脚本</strong></p>
<blockquote>
<p>注意的是,一键脚本只能下载每日排行榜,当然还是正常的榜,R18榜是不能下的.但是还是挺方便的,毕竟不需要登陆的. ❤️</p>
</blockquote>
<p><strong>2. 下载脚本</strong></p>
<pre><code>wget https://raw.githubusercontent.com/MoeClub/Pixiv/master/pixiv.py
</code></pre>
<p>脚本默认<code>25</code>线程，想改的话，直接编辑脚本，搜索<code>25</code>，改成相应数字就可以了。</p>
<p><strong>3. 使用脚本</strong></p>
<pre><code>#下载画师原图，使用画师UID即可
python3 pixiv.py &quot;673179&quot; 
   
#下载排行榜原图，使用排行榜地址即可    
python3 pixiv.py &quot;https://www.pixiv.net/ranking.php?mode=male&quot;  //可改女性排行榜,不可R18 :滑稽
</code></pre>
<h3 id="pxder">pxder</h3>
<p><strong>1. pxder</strong></p>
<blockquote>
<p>还算挺好用的下载器吧,主要就是下载自己的收藏夹挺方便的,其他的功能的话,下载画师啥的,还行吧,应该,不过没用过.</p>
</blockquote>
<p><strong>2. 安装node</strong></p>
<pre><code>#Debian/Ubuntu系统 

curl -sL https://deb.nodesource.com/setup_10.x | bash - 
apt install -y git nodejs 

#CentOS系统 

curl -sL https://rpm.nodesource.com/setup_10.x | bash - 
yum install nodejs git -y
</code></pre>
<h2 id="安装更新卸载">安装/更新/卸载</h2>
<p>打开“命令提示符”或者“Powershell”，执行下面的命令，即可安装或者更新（注：后续命令皆为在此执行）</p>
<pre><code class="language-bash">npm i -g pxder
</code></pre>
<p>如需卸载，执行</p>
<pre><code class="language-bash">npm uninstall -g pxder
</code></pre>
<h2 id="配置">配置</h2>
<h3 id="登录">登录</h3>
<pre><code class="language-bash">pxder --login
</code></pre>
<p>然后会让你输入用户名密码，登录成功一次后以后如果没有出什么bug则无需再次登录</p>
<p>注：pxder 仅会在计算机上储存 refreshAccessToken，而不会储存您的帐号密码</p>
<p>如果要登出</p>
<pre><code class="language-bash">pxder --logout
</code></pre>
<h3 id="设置">设置</h3>
<p>进入 Pxder 的设置界面</p>
<pre><code class="language-bash">pxder --setting
</code></pre>
<p>有五项设置，按下数字键选择一项进行设置，然后按照要求输入之后回车即可</p>
<pre><code class="language-bash">[1] Download path     # 下载目录，必须设置
[2] Download thread   # 下载线程数
[3] Download timeout  # 下载超时
[4] Auto rename       # 自动重命名（文件夹）
[5] Proxy             # 使用代理
</code></pre>
<ul>
<li>
<p><strong>下载目录</strong><br>
请注意相对路径与绝对路径的区别，不过不用担心，输入完路径后会显示绝对路径以方便你检查<br>
目录无需手动建立，下载图片的时候会自动建立</p>
</li>
<li>
<p><strong>下载线程数</strong><br>
即同时下载的图片数，默认为<code>5</code>，最小为<code>1</code>，最大为<code>32</code><br>
下载图片时最左侧的一列实际上就是线程编号</p>
</li>
<li>
<p><strong>下载超时及重试</strong><br>
如果这么多秒之后一张图还没被下载完则算作超时，超时后会自动重试，默认值为<code>30</code><br>
下载图片时如果线程编号是黄色底的就代表此次是重试<br>
重试超过<code>10</code>次则视作下载失败</p>
</li>
<li>
<p><strong>自动重命名</strong><br>
开启了以后，例如这个画师原来叫<code>abc</code>，今天你再次去下载（更新）他的画作，但是他改名叫<code>def</code>了，那么程序会自动帮你重命名画师文件夹</p>
</li>
<li>
<p><strong>使用代理</strong><br>
支持使用 HTTP 或 SOCKS 代理，即可以使用小飞机<br>
输入格式为<code>&lt;协议&gt;://[用户名:密码@]&lt;IP&gt;:&lt;端口&gt;</code>，例如：</p>
<ul>
<li><code>http://user:passwd@127.0.0.1:1080</code></li>
<li><code>socks://127.0.0.1:1080</code>（如果你使用小飞机则直接填这个，除非你改过本地端口）</li>
</ul>
<p>如果输入空行则关闭代理</p>
</li>
</ul>
<p>注：配置文件存放路径可通过命令<code>pxder --conf-loca</code>查看</p>
<h2 id="说明">说明</h2>
<ul>
<li>由于官方客户端 API 限制 offset 不能大于 5000，所以程序不会也无法得到画师列表、画作列表、收藏列表等 5000 页以后的数据，并且由该原因导致的程序崩溃问题已经在 v2.7.3 修复</li>
<li>会将同一画师的作品下载在<code>(UID)画师名</code>格式的文件夹内，图片命名格式为<code>(PID)作品名</code><br>
并且，画师名会自动删除名字中<code>@</code>（包含半角&amp;全角）符号及以后的文字（因为这些基本上都是画师的摊位信息之类的与名字无关的信息）</li>
<li>文件（夹）名均会过滤掉所有 Windows 和 Linux 中不能或不推荐做文件名的符号</li>
<li>动图下下来会是所有帧的压缩包，并且会标注 delay 信息
<ul>
<li>例如<code>xxx@30ms.zip</code>表示该动图的播放速度为 30ms 一帧</li>
<li>由于获取动图信息需要额外调用API，因此如果动图较多将会使得解析时间较长</li>
</ul>
</li>
<li>下载时会忽略掉已经下载完成的插画</li>
<li>下载超时或网络错误会自动重试，重试上限为10次
<ul>
<li>如果当某一个线程达到重试上限并且此时有不止一个下载线程处于重试状态，程序将视为暂时出现了网络问题，暂停5分钟后会继续重试</li>
<li>如果只有一个下载线程出现错误，程序将会放弃下载该p并继续运行（因为有出现过确实是因为P站自己的问题而无法下载的例子<code>48948784_p4</code>）</li>
</ul>
</li>
<li>抗GFW连接重置攻击，解析时被连接重置会自动重试</li>
</ul>
<h2 id="正式使用">正式使用</h2>
<p>如果需要终止程序，请在命令行中按下<code>Ctrl + C</code>或者直接关闭命令行窗口</p>
<p>请不要吐槽为什么在 Windows 下<code>Ctrl + C</code>后提示的<code>终止批处理操作吗(Y/N)?</code>不管是 Y 还是 N 都依然会终止，因为 nodejs 捕捉到<code>Ctrl + C</code>就自己终止了，Windows 晚了一步（。</p>
<h3 id="1-下载或更新某画师的所有插画作品">(1) 下载或更新某画师的所有插画作品</h3>
<p>使用<code>-u</code>或<code>--uid</code>参数，后跟画师的 UID，可单个可多个，如果多个则用英文半角逗号隔开</p>
<pre><code class="language-bash">pxder -u uid1,uid2,uid3,...
</code></pre>
<p>例如</p>
<pre><code class="language-bash">pxder -u 5899479,724607,11597411
</code></pre>
<h3 id="2-下载或更新你关注的所有画师的所有插画作品">(2) 下载或更新你关注的所有画师的所有插画作品</h3>
<p>该操作同时也会更新已下载的关注画师的作品，并且效率远高于 (3)，比较推荐使用</p>
<p>会自动排除 pixiv事務局 (uid=<code>11</code>)</p>
<p>由于收集关注信息需时较久，因此特地针对该功能做了信息缓存：如果你在下载中途退出，那么下次使用该功能时并不需要重新收集，而是利用上次的缓存立即继续下载。</p>
<ul>
<li>公开关注与私密关注的缓存是分开的，互不干扰</li>
<li>如果你需要强制重新收集画师信息（忽略上次的缓存），请在运行命令时加入<code>--force</code>参数</li>
</ul>
<h4 id="公开关注的画师">公开关注的画师</h4>
<pre><code class="language-bash">pxder -f
# 或
pxder --follow
</code></pre>
<h4 id="私密关注的画师">私密关注的画师</h4>
<pre><code class="language-bash">pxder -F
# 或
pxder --follow--private
</code></pre>
<h3 id="3-更新已下载的画师的画作">(3) 更新已下载的画师的画作</h3>
<p>会对下载目录中检测到的所有下载过的画师的插画进行增量更新下载</p>
<p>与 (2) 的区别是可以更新你使用 (1) 下载了的但是未关注的画师的插画，但是效率远低于 (2)</p>
<pre><code class="language-bash">pxder -U
# 或
pxder --update
</code></pre>
<h3 id="4-下载或更新你的收藏中的插画作品">(4) 下载或更新你的收藏中的插画作品</h3>
<h4 id="公开收藏">公开收藏</h4>
<p>插画会被下载至<code>[bookmark] Public</code>文件夹中</p>
<pre><code class="language-bash">pxder -b
# 或
pxder --bookmark
</code></pre>
<h4 id="私密收藏">私密收藏</h4>
<p>插画会被下载至<code>[bookmark] Private</code>文件夹中</p>
<pre><code class="language-bash">pxder -B
# 或
pxder --bookmark--private
</code></pre>
<h3 id="5-根据指定-pid-下载插画">(5) 根据指定 PID 下载插画</h3>
<p>插画会被下载至<code>PID</code>文件夹中</p>
<pre><code class="language-bash">pxder -p pid1,pid2,pid3,...
</code></pre>
<p>例如</p>
<pre><code class="language-bash">pxder -p 70593670,70594912,70595516
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[heroku搭建RSSHUB]]></title>
        <id>https://g.yzddhr.me/post/heroku-da-jian-rsshub</id>
        <link href="https://g.yzddhr.me/post/heroku-da-jian-rsshub">
        </link>
        <updated>2019-08-14T10:45:26.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="目的">目的</h2>
<p>利用免费的heroku空间搭建自己的RSSHUB。关于rsshub的话用法很多，前面已经说过用rsshub实现某些网站的视频自动下载等功能，当然最重要的还是RSS功能</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="目的">目的</h2>
<p>利用免费的heroku空间搭建自己的RSSHUB。关于rsshub的话用法很多，前面已经说过用rsshub实现某些网站的视频自动下载等功能，当然最重要的还是RSS功能</p>
<!-- more -->
<p>，唉，当今世界，人心浮躁，究竟还有几个自己看自己的RSS信息了，难道被淹没在碎片化信息的洪流中才是正常的状态吗？心里净土终不可得，这是个悲哀的时代，是个宣传伪个性的时代。</p>
<blockquote>
<p>🍰 万物皆可 RSS <a href="https://docs.rsshub.app/">https://docs.rsshub.app</a></p>
</blockquote>
<h2 id="环境">环境</h2>
<ul>
<li>heroku</li>
<li>RSSHUB</li>
</ul>
<h2 id="安装">安装</h2>
<ul>
<li>安装heroku</li>
</ul>
<ol>
<li>安装node环境</li>
</ol>
<pre><code>#Debian/Ubuntu系统 

curl -sL https://deb.nodesource.com/setup_10.x | bash - 

apt install -y git nodejs 

#CentOS系统 
curl -sL https://rpm.nodesource.com/setup_10.x | bash - 
yum install nodejs git -y

</code></pre>
<ol start="2">
<li>安装<br>
npm安装cli</li>
</ol>
<pre><code>npm install heroku-cli -g  //全局安装,
</code></pre>
<p>OR</p>
<pre><code>npm install heroku-cli --save //当前目录安装,之后再node_文件夹里面设置软连接即可.
</code></pre>
<ol start="3">
<li>下载源码</li>
</ol>
<pre><code>git clone https://github.com/DIYgod/RSSHub.git
</code></pre>
<ol start="4">
<li>heroku-cli的配置</li>
</ol>
<ul>
<li>登陆</li>
</ul>
<pre><code>heroku login -i       //输入用户名,密码即可
</code></pre>
<ul>
<li>推送<br>
进入刚才下载的RSSHUB的目录<br>
做自己想搞得更改</li>
</ul>
<pre><code>git add . 
git commit -m &quot;XXX&quot;
</code></pre>
<p>创建应用</p>
<pre><code>heroku create yzd-test //创建yzd-test的APP
</code></pre>
<p>推送</p>
<pre><code>git push heroku master //推送到master
</code></pre>
<h2 id="使用">使用</h2>
<p>访问:<br>
<a href="yzd-test.herokuapp.com">yzd-test.herokuapp.com</a>    //当然用你自己的APP名哈.</p>
<h2 id="使用体验">使用体验</h2>
<p>RSSHUB的功能丰富,作为一名歇斯底里的批小将,我认为使用体验还不错.<br>
以上!</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安装使用serveo （内网穿透）]]></title>
        <id>https://g.yzddhr.me/post/an-zhuang-shi-yong-serveo-nei-wang-chuan-tou</id>
        <link href="https://g.yzddhr.me/post/an-zhuang-shi-yong-serveo-nei-wang-chuan-tou">
        </link>
        <updated>2019-08-14T10:44:33.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>说明：</strong><code>Serveo</code>是一个<code>SSH</code>服务器，仅用于远程端口转发，可以快速将本地端口暴露在外网。官方声称其为<code>Ngrok</code>的绝佳替代品</p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>说明：</strong><code>Serveo</code>是一个<code>SSH</code>服务器，仅用于远程端口转发，可以快速将本地端口暴露在外网。官方声称其为<code>Ngrok</code>的绝佳替代品</p>
<!-- more -->
<p>，对其优点是使用现有的<code>SSH</code>客户端，无需安装客户端即可完成端口转发。当用户连接到<code>Serveo</code>时，他们会获得一个公共<code>URL</code>，任何人都可以使用它来连接到他们的<code>localhost</code>服务器。</p>
<h2 id="使用">使用</h2>
<p><strong>官方地址：</strong><a href="http://serveo.net/">http://serveo.net</a></p>
<p>**使用要求：**可以使用<code>SSH</code>，并且能连接到互联网，<code>Linux</code>、<code>Windows</code>等系统都行。</p>
<p><strong>1、转发HTTP</strong><br>
将本地<code>3000</code>端口穿透到公网中，使用命令：</p>
<pre><code>#要转发其它端口的自行替换
ssh -R 80:localhost:3000 serveo.net
</code></pre>
<p>第一次如果有提示，选择<code>yes</code>即可，之后会为你随机生成一个<code>serveo.net</code>二级域名，然后就可以使用浏览器间接访问本地的<code>localhost:3000</code>了。</p>
<p>如果要指定二级域名，可以使用命令：</p>
<pre><code>#这里默认为moerats.serveo.net，自行替换即可
ssh -R moerats:80:localhost:3000 serveo.net
</code></pre>
<p>此时你就可以在外网使用<code>moerats.serveo.net</code>访问你本地的<code>localhost:3000</code>了。</p>
<p><strong>2、转发SSH</strong><br>
将本地<code>22</code>端口穿透到公网中，使用命令：</p>
<pre><code>#可以自行设置名称，这里默认rats
ssh -R rats:22:localhost:22 serveo.net

</code></pre>
<p>接下来就可以登录该内网服务器了，使用命令：</p>
<pre><code>ssh -J serveo.net root@rats

</code></pre>
<p><strong>3、转发TCP</strong><br>
将本地<code>1492</code>端口穿透到公网中，使用命令：</p>
<pre><code>#可以自行设置公网端口，这里默认1492
ssh -R 1492:localhost:1492 serveo.net

</code></pre>
<h2 id="进程守护">进程守护</h2>
<p>这里官方推荐使用<code>AutoSSH</code>，作用是一旦<code>SSH</code>连接超时或停止传递流量，则根据需要重新启动它。</p>
<p><strong>1、安装AutoSSH</strong></p>
<pre><code>#Debian/Ubuntu系统
apt install autossh -y

#CentOS系统
yum install autossh -y

</code></pre>
<p><strong>2、使用Systemd</strong></p>
<p>只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#输入你的转发命令，去掉开头的ssh即可
serveo=&quot;-R 80:localhost:3000 serveo.net&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/autossh.service &lt;&lt;EOF
[Unit]
Description=autossh
After=network.target

[Service]
Type=simple
Environment=&quot;AUTOSSH_GATETIME=0&quot;
ExecStart=$(command -v autossh) -M 0 -o &quot;ServerAliveInterval 30&quot; -o &quot;ServerAliveCountMax 3&quot; $serveo
Restart=on-abort

[Install]
WantedBy=multi-user.target
EOF
</code></pre>
<p>开始启动并设置开机自启：</p>
<pre><code>systemctl start autossh
systemctl enable autossh

</code></pre>
<p>最后更多的命令和使用可以直接查看官方文档→<a href="http://serveo.net/">传送门</a>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ubuntu口袋系统搭建之桌面版（TLS）]]></title>
        <id>https://g.yzddhr.me/post/ubuntu-kou-dai-xi-tong-da-jian-zhi-zhuo-mian-ban-tls</id>
        <link href="https://g.yzddhr.me/post/ubuntu-kou-dai-xi-tong-da-jian-zhi-zhuo-mian-ban-tls">
        </link>
        <updated>2019-08-14T10:04:35.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>搭建口袋系统，即插即用，最近刚好需要用Linux，为了方便安装一个随身系统，即插即用，方便的使用node和docker等，本文使用Vm workstation搭建</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>搭建口袋系统，即插即用，最近刚好需要用Linux，为了方便安装一个随身系统，即插即用，方便的使用node和docker等，本文使用Vm workstation搭建</p>
<!-- more -->
<blockquote>
<p>网络教程众多，但是大多数含糊其词，请严格按照本文操作。</p>
</blockquote>
<h2 id="环境条件">环境（条件）</h2>
<ul>
<li>Ubuntu14.04镜像（可选，本人是电脑配置跟不上才选的14，当然也可以用18）</li>
<li>VM workstations</li>
<li>一个U盘（这边建议USB3.0，本人用的是USB2.0结果慢的想死）</li>
</ul>
<h2 id="安装">安装</h2>
<h3 id="vm-虚机安装">VM 虚机安装</h3>
<p>下载地址:链接: https://pan.baidu.com/s/12Mn69kd1gSni85CKNvA5Fw 提取码: xwyw<br>
下载安装输入安装包里面的密钥即可。</p>
<h3 id="虚拟环境开启">虚拟环境开启</h3>
<p>对于大多数PC来说，默认没有开启虚机环境，需要开启虚拟化技术，才能用VM虚拟机。</p>
<p><strong>1. 检查windows操作系统是否已经打开了Hyper-V功能：</strong></p>
<p>控制面板——&gt;程序——&gt;启用或关闭Windows功能——&gt;勾选Hyper-V<br>
<img src="https://img.hacpai.com/file/2019/08/1-dba475d7.png" alt="1.png"></p>
<p><strong>2. 检查BIOS是否开启了虚拟化功能：</strong></p>
<p>这个的话，不同的主板的bios进入是不一样的，自行百度。<br>
附HP官网说明:https://support.hp.com/cn-zh/document/c05189714</p>
<h3 id="开启-vmware-usb-服务">开启 VMware USB 服务</h3>
<p><img src="https://img.hacpai.com/file/2019/08/ia100000002-98ef37a2.png" alt="ia100000002.png"><br>
启动后如下图<br>
<img src="https://img.hacpai.com/file/2019/08/ia100000003-a3566643.png" alt="ia100000003.png"></p>
<h3 id="新建虚机">新建虚机</h3>
<p><strong>1. 开启软件，新建虚机</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000004-68be674c.png" alt="ia100000004.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000447-dbca37d1.png" alt="ia100000447.png"><br>
<strong>2. 随便一个名字</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000448-de9d58c5.png" alt="ia100000448.png"><br>
<strong>3. 选择储存为单个文件</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000449-809cf9eb.png" alt="ia100000449.png"><br>
<strong>4. 编辑虚拟机</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000451-03030864.png" alt="ia100000451.png"><br>
<strong>5. 双击“处理器”全部勾选</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000453-d3e721b3.png" alt="ia100000453.png"><br>
<strong>6. 双击USB选项。全部勾选</strong><br>
<img src="https://img.hacpai.com/file/2019/08/Snipaste20190814171129-f3446527.png" alt="Snipaste20190814171129.png"><br>
<strong>7. 选择相应镜像文件</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000457-6818939a.png" alt="ia100000457.png"><br>
<strong>8. 播放虚拟机</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000458-982eeeeb.png" alt="ia100000458.png"></p>
<blockquote>
<p>如果无法正常的开启虚拟机的话，说明虚拟化的功能还是没有开启，说明前面还是没有做到位。自行百度。</p>
</blockquote>
<p><strong>9. 选择试用Try Ubuntu</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000459-3e82f4cd.png" alt="ia100000459.png"><br>
<strong>10.连接U盘</strong><br>
<em>这里注意点击一下虚拟机的画面，不然不可使用键鼠</em><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000460-fae2b255.png" alt="ia100000460.png"><br>
<strong>11. 点击安装Ubuntu</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000465-21f23bb7.png" alt="ia100000465.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000466-733f08c1.png" alt="ia100000466.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000467-ec113e42.png" alt="ia100000467.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000468-f3b11d77.png" alt="ia100000468.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000469-f93d2ecf.png" alt="ia100000469.png"></p>
<p><strong>12. 磁盘分区</strong><br>
<em>这里注意双击你自己的U盘或者移动硬盘，我的是用硬盘，自己区分</em><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000470-7022d800.png" alt="ia100000470.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000471-8b005d40.png" alt="ia100000471.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000472-aed1398a.png" alt="ia100000472.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000473-3a8f6400.png" alt="ia100000473.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000475-f0e54c0a.png" alt="ia100000475.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000477-84197c5c.png" alt="ia100000477.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000478-9b66fe2b.png" alt="ia100000478.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000479-7063d714.png" alt="ia100000479.png"></p>
<p><strong>13. 进入漫长的等待过程</strong><br>
<em>这个过程真的非常漫长，这边建议USB2。0最好不要安装，USB2.0推荐后面安装ubutnu server的教程</em><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000480-9b6004d1.png" alt="ia100000480.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000481-8da41772.png" alt="ia100000481.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000482-c3ef74d7.png" alt="ia100000482.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000483-17c316af.png" alt="ia100000483.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000486-86819df6.png" alt="ia100000486.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000487-4045d2bc.png" alt="ia100000487.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000488-14d95be7.png" alt="ia100000488.png"><br>
<strong>14. 安装完成</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000489-45a48858.png" alt="ia100000489.png"><br>
<strong>15. 关闭软件</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000490-19351df5.png" alt="ia100000490.png"><br>
<strong>16. 设置U盘启动</strong><br>
<em>建议自行百度，不同的主板的BIOS设置不同</em><br>
就HP来说；如下操作：</p>
<ol>
<li>开机时按下esc进入BIOS</li>
<li>进入安全选项卡（security）</li>
<li>按F5或者F6调整选项位置（F5向下，F6向上）</li>
<li>F10保存并退出<br>
<strong>即可进入系统</strong><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000492-677d70ed.png" alt="ia100000492.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000493-e2cd5742.png" alt="ia100000493.png"><br>
<img src="https://img.hacpai.com/file/2019/08/ia100000494-f8bf8b2d.png" alt="ia100000494.png"></li>
</ol>
<h3 id="使用体验">使用体验</h3>
<blockquote>
<p>不要用，怪不得没人用这种口袋系统，首先我用的是USB2.0可能也是一个原因，但是说实话，普通U盘还是就不同装了吧，建议老毛桃的win PE还是不错的选择。<br>
这里老毛桃的官网：</p>
</blockquote>
<ol>
<li>http://www.laomaotao.org/<br>
这个网站的话，是官方网站，但是软件会报毒。</li>
<li>https://www.laomaotao.net/<br>
这个网站不会报错，而且这个网站不会报毒，还是绿色版本。推荐。</li>
</ol>
<h3 id="优缺点">优缺点</h3>
<p>**优点:**很显然，毕竟是口袋系统，所以方便性还是有的。<br>
**缺点:**使用速度慢，当然可能是我的缺点（没有USB3.0），和系统无关，但是使用体验还是不甚理想，而且如果要使用无线网的话，还必须设置无线网驱动。</p>
<h2 id="下期">下期</h2>
<p>利用VM 虚拟机安装ubuntu server的口袋系统。（推荐）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[免费的免备案的CDN]]></title>
        <id>https://g.yzddhr.me/post/mian-fei-de-mian-bei-an-de-cdn</id>
        <link href="https://g.yzddhr.me/post/mian-fei-de-mian-bei-an-de-cdn">
        </link>
        <updated>2019-08-13T00:03:42.000Z</updated>
        <summary type="html"><![CDATA[<p>今天要介绍的是一家免费的CDN，</p>
]]></summary>
        <content type="html"><![CDATA[<p>今天要介绍的是一家免费的CDN，</p>
<!-- more -->
<p>国人的外国公司，首月赠送500G，有邀请赠送1T，但是有办法搞到流量包，当然你要是想每月换个号，没问题，也就重新设置下CNAME的事，但是不同的账号，需要有个7天的等待期，相当于这段时间你网站就只能直连了，但是是可以通过邀请获取永久的流量包的，这也是为什么我水这篇文章，希望好人们可以动动小手，帮帮忙，我博客基本没人访问，所以只要能邀请1个人，我就能获得5个G，就完全够了！帮个忙在走啦，靓仔。<br>
<img src="https://g.yzddhr.me/post-images/1565654957819.jpg" alt=""></p>
<blockquote>
<p>网址：https://console.nodecache.com/api/f?aff=3jWeQE<br>
直接就是上面的了，不敢短连接隐藏邀请码啥的花花道道了。</p>
</blockquote>
<p>注册的过程就不用多说了，填个邮箱，设个密码就完事了，大家只要注册后，使用下CDN就完事了，不用是没有奖励的，就是送的1024G不可一点没用。这样就没有5G流量包了。<br>
<img src="https://g.yzddhr.me/post-images/1565655352234.png" alt=""></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自动下载bilibili的视频]]></title>
        <id>https://g.yzddhr.me/post/zi-dong-xia-zai-bilibili-de-shi-pin</id>
        <link href="https://g.yzddhr.me/post/zi-dong-xia-zai-bilibili-de-shi-pin">
        </link>
        <updated>2019-08-07T02:25:52.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="实现功能">实现功能</h2>
<p>vps自动下载手机上b站投币或者收藏的视频。后续可以搭配设置自动同步到onedriver或者google硬盘等。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="实现功能">实现功能</h2>
<p>vps自动下载手机上b站投币或者收藏的视频。后续可以搭配设置自动同步到onedriver或者google硬盘等。</p>
<!-- more -->
<h2 id="环境">环境</h2>
<ul>
<li>docker</li>
<li>web-hook</li>
<li>IFTTT</li>
<li>RSSHUB</li>
<li>you-get</li>
</ul>
<h2 id="安装环境">安装环境</h2>
<p>1.安装docker</p>
<pre><code>curl -sSL https://get.docker.com/ | sh  
systemctl start docker  
systemctl enable docker 
</code></pre>
<p>2.安装nodejs</p>
<pre><code>#Debian/Ubuntu系统  
curl -sL https://deb.nodesource.com/setup_10.x | bash - 
apt install -y nodejs git 

#CentOS系统 
curl -sL https://rpm.nodesource.com/setup_10.x | bash - 
yum install nodejs git -y
</code></pre>
<h2 id="安装软件">安装软件</h2>
<ul>
<li>RSSHUB</li>
</ul>
<pre><code>docker run -d --name rsshub -p 1200:1200 diygod/rsshub
</code></pre>
<ul>
<li>web-hook</li>
</ul>
<pre><code>git clone https://github.com/DIYgod/download-webhook.git //下载web-hook
npm install //模块安装
npm run start &amp; //启动(后台)
</code></pre>
<p>测试</p>
<pre><code>curl -X POST -H &quot;Content-Type:application/json&quot; -d '{&quot;secret&quot;: &quot;mysecret&quot;, &quot;path&quot;: &quot;mypath&quot;, &quot;name&quot;: &quot;myvideo&quot;, &quot;url&quot;: &quot;https://www.bilibili.com/video/av45364988&quot;}' http://127.0.0.1:3000
</code></pre>
<p>绿的就说明没问题，注意跑在3000端口，记得打开</p>
<ul>
<li>you-get<br>
注意需要python3环境</li>
</ul>
<pre><code>pip3 install you-get
</code></pre>
<h2 id="配置">配置</h2>
<p>进入IFTTT官网<a href="https://ifttt.com/">官网</a><br>
新建APP，进行如图配置<br>
<img src="https://img.hacpai.com/file/2019/06/Screenshot-f2761ce1.png" alt="Screenshot.png"></p>
<p><img src="https://img.hacpai.com/file/2019/06/Screensvhot-737250a9.png" alt="Screensvhot.png"></p>
<p>成功如图<br>
<img src="https://img.hacpai.com/file/2019/06/Screshot-7649bd5c.png" alt="Screshot.png"></p>
<h2 id="更多配置">更多配置</h2>
<p><code>RSSHUB</code>更详细的用法参照官网：<a href="https://docs.rsshub.app/">https://docs.rsshub.app/</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WSl子系统使用指南]]></title>
        <id>https://g.yzddhr.me/post/wsl-zi-xi-tong-shi-yong-zhi-nan</id>
        <link href="https://g.yzddhr.me/post/wsl-zi-xi-tong-shi-yong-zhi-nan">
        </link>
        <updated>2019-08-07T02:23:04.000Z</updated>
        <summary type="html"><![CDATA[<p>以下是已经开启虚拟化之后的操作，包括WSL的一些管理和走过的坑，关于更基础的后面再补吧。</p>
]]></summary>
        <content type="html"><![CDATA[<p>以下是已经开启虚拟化之后的操作，包括WSL的一些管理和走过的坑，关于更基础的后面再补吧。</p>
<!-- more -->
<h2 id="两个管理">两个管理</h2>
<pre><code>- wslconfig
- lxrun
</code></pre>
<p>这两个命令都是本地Windows使用的，具体使用办法自己看说明，都是汉字。<br>
可以用这俩个命令设置默认的<code>wsl</code>命令之后进入的系统。就是自己有多个Linux安装后的情况啦。主要是拿来卸载用的。</p>
<h2 id="文件系统">文件系统</h2>
<p>WSL和Windows主系统之间的文件系统是可以互相访问的。</p>
<p>如果在WSL中访问Windows系统的文件，可在根目录下/mnt/看到对应Windows盘符字母的文件夹，通过这些文件夹即可访问Windows的文件系统。</p>
<p>如果在Windows系统中访问<code>WSL</code>的文件，可在Windows系统中找到已安装Linux发行版的应用数据文件夹，所有Linux系统的数据都在那个文件夹（通过应用商店安装的Linux发行版本质上也是一个应用）。Linux发行版的数据文件夹在<code>C:\Users\{你的用户名}\AppData\Local\Packages\{Linux发行版包名}\LocalState\rootfs</code>路径内，在<code>rootfs</code>文件夹内我们会看到在<code>WSL</code>中的根目录。</p>
<blockquote>
<p><strong>注：在Windows下对WSL文件修改可能会造成权限错误</strong></p>
</blockquote>
<h2 id="端口">端口</h2>
<ul>
<li>Windows本地和子系统是同一个端口，同一个IP，就是localhost。</li>
</ul>
<h2 id="卸载">卸载</h2>
<ol>
<li>通过<code>wslconfig</code>命令来卸载注册。</li>
<li>进入上面说的本地文件夹下，删除相关的发行版的目录即可，也就是说其实什么安装子系统也就是注册了一下而已。<br>
或者：使用</li>
</ol>
<pre><code>lxrun /uninstall /full
</code></pre>
<blockquote>
<p>PS:进入上面说的目录进行删除,丛文件夹的内容即里面开始删,不然会提示权限错误,里面删的只剩几个数据库.db之后,就能整个删除了.从新进入Windows store,点击安装提示错误,用管理员的cmd,用cd命令进入给的目录删除相应的目录即可</p>
</blockquote>
<p><strong>最后在任务栏右击卸载即可。</strong></p>
<h1 id="wsl子系统">WSL子系统</h1>
<p>想了想还是一起写了吧，反正安装也简单的很。</p>
<h2 id="安装">安装</h2>
<p>复制来的</p>
<blockquote>
<p>在安装前，需要在<strong>启动或关闭Windows功能</strong>中勾选<strong>适用于Linux的Windows子系统</strong>，或者直接在管理员权限的PowerShell中输入<code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</code>此条命令，也能达到同样的效果。<br>
完成上述操作后，可直接在<strong>Microsoft Store</strong>中搜索Linux，到本文书写为止，商店中已经有Ubuntu、SUSE、Debian、Kali等Linux发行版，个人建议下载Ubuntu。<br>
到Ubuntu的下载页，可以看到发布者为Canonical公司，这也正是Ubuntu的维护公司，值得注意的是，Canonical公司还发布了特定版本的Ubuntu系统，例如Ubuntu 16.04 LTS、Ubuntu 18.04 LTS等，个人建议直接下载无版本号的Ubuntu，而不要下载特定版本的Ubuntu，因为无版本号的Ubuntu会在新版本Ubuntu发布之后切换到最新版，所以它始终指向最新的Ubuntu。同时请注意，应用商店里Ubuntu软件的更新并不会升级Ubuntu版本，如果你恰好安装的是旧版本，想要升级到新版本，可以在WSL中运行<code>do-release-upgrade</code>命令升级到最新版。<br>
下载完成后，要启动Ubuntu有多种方式，可以在<strong>PowerShell</strong>或<strong>cmd</strong>中输入<code>wsl</code>或<code>bash</code>或<code>ubuntu</code>都可启动，也可以直接在<strong>开始菜单</strong>中点击Ubuntu图标启动。</p>
</blockquote>
<h2 id="ssh的配置">ssh的配置</h2>
<p>window自己的bash 难用的要死，肯定还是要ssh外面用的。<br>
因为自己的Windows会占用22端口。而子系统和主机是同端口的。<br>
修改SSH Server的监听端口，这里修改外<code>23</code>。</p>
<p><code>sudo sed -i '/Port /c Port 23' /etc/ssh/sshd_config</code></p>
<p>修改SSH Server的监听地址。</p>
<p><code>sudo sed -i '/ListenAddress 0.0.0.0/c ListenAddress 0.0.0.0' /etc/ssh/sshd_config</code></p>
<p>按照个人需求配置密码登陆或者密钥登陆，在此不做演示</p>
<p>重启SSH服务，本地已经能够通过SSH登陆。</p>
<p><code>sudo service ssh restart</code></p>
<h3 id="更详细配置">更详细配置</h3>
<p>要想在WSL中开启SSH服务，需要在配置文件(/etc/ssh/sshd_config)中作如下修改：</p>
<pre><code>Port 2222  #将22改为2222，因Win10中自带的SSH服务也在监听22端口 

ListenAddress 0.0.0.0  #取消注释，监听所有端口 
UsePrivilegeSeparation no  #将yes修改为no 
PermitRootLogin yes  #将prohibit-password修改为yes，允许root用户登录，视个人情况而定 
PasswordAuthentication yes  #将no修改为yes，允许密码登录
</code></pre>
<h3 id="报错解决">报错解决</h3>
<p><code>service ssh start</code>时报错如下:</p>
<pre><code>Could not load host key: /etc/ssh/ssh_host_rsa_key
Could not load host key: /etc/ssh/ssh_host_dsa_key 
Could not load host key: /etc/ssh/ssh_host_ecdsa_key 
Could not load host key: /etc/ssh/ssh_host_ed25519_key
</code></pre>
<p>问题是没有相关的秘钥<br>
解决:生成相关的秘钥</p>
<pre><code>ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key 
ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key 
ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key 
ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
</code></pre>
<h3 id="默认启动">默认启动</h3>
<p><code>vi /etc/rc.local</code><br>
加入一行<br>
<code>/etc/init.d/ssh start</code>在<code>exit 0</code>之前。</p>
<h2 id="wsl的子系统如何迁移">WSL的子系统如何迁移</h2>
<p>主流的使用LxRunOffline进行迁移：不过好像也就只迁移到了G盘里面。也不知道有没有什么实质性的用处。</p>
<ul>
<li>
<p>下载 LxRunOffline 软件 链接为：<a href="https://github.com/DDoSolitary/LxRunOffline/releases">https://github.com/DDoSolitary/LxRunOffline/releases</a></p>
</li>
<li>
<p>解压，并在该目录下打开命令提示符，输入如下代码</p>
</li>
</ul>
<pre><code># 显示当前的 Distribution 名称
&gt; LxRunOffline list 
Legacy 
# 移动该 Distribution 
&gt; LxRunOffline move -n Legacy -d D:\wsl\legacy
</code></pre>
<p>上述命令将整个 WSL 的 rootfs 移动至 <code>D:\wsl\legacy</code> 文件夹下。</p>
<ul>
<li>check 能否正常使用，按照使用一节提示的操作进行即可</li>
</ul>
]]></content>
    </entry>
</feed>